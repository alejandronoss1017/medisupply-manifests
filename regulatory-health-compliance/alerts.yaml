##################################################################################################
# alerts service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: alerts
  labels:
    app: alerts
    service: alerts
spec:
  ports:
    - port: 3000
      name: http
  selector:
    app: alerts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: medisupply-alerts
  labels:
    account: alerts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerts-v1
  labels:
    app: alerts
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alerts
      version: v1
  template:
    metadata:
      labels:
        app: alerts
        version: v1
    spec:
      serviceAccountName: medisupply-alerts

      containers:
        - name: alerts
          image: public.ecr.aws/q2b4w2e6/dummies/alerta-ms:1.2.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            - name: SERVICE_NAME
              value: "ALERTA MS"
            - name: AWS_ACCESS_KEY_ID
              valueFrom: { secretKeyRef: { name: aws-credentials, key: AWS_ACCESS_KEY_ID } }
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom: { secretKeyRef: { name: aws-credentials, key: AWS_SECRET_ACCESS_KEY } }
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10